/*
 * MIT License
 *
 * Copyright (c) 2020 Ethan Bacurio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'java'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

PluginManifest manifest = [
        name       : 'CommandPrompter',
        version    : new Version(major: 0, minor: 1, patch: 23, fix: 0, classifier: 'SNAPSHOT'),
        author     : 'CyR1en',
        description: 'Perfect companion plugin for inventory UI menu.',
        entry      : 'com.cyr1en.commandprompter.CommandPrompter'
]

group = 'com.cyr1en'
version = manifest.version.toString()

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://libraries.minecraft.net/' }
    maven { url 'https://repo.cyr1en.com/snapshots' }
    maven { url 'https://repo.dmulloy2.net/repository/public/' }
    maven { url 'https://repo.codemc.io/repository/maven-snapshots/' }
}

dependencies {
    implementation 'me.lucko:commodore:1.11'
    implementation 'com.cyr1en:kiso-utils:1.2-SNAPSHOT'
    implementation 'com.cyr1en:kiso-mc:1.2-SNAPSHOT'
    implementation 'net.wesjd:anvilgui:1.5.3-SNAPSHOT'
    implementation 'org.bstats:bstats-bukkit:2.2.1'
    compileOnly "org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT"
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0'
}

configurations.implementation {
    exclude group: 'joda-time', module: 'joda-time'
    exclude group: 'org.atteo.classindex', module: 'classindex'
}

shadowJar {
    dependencies {
        exclude(dependency('com.mojang:brigadier'))
    }

    archiveBaseName.set("$project.name")
    archiveClassifier.set(manifest.version.classifier)
    archiveVersion.set(manifest.version.getFullVersion())

    relocate 'me.lucko.commodore', 'com.cyr1en.commodore'
    relocate 'org.bstats', 'com.cyr1en.bstats'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        expand(
                'projectName': manifest.name,
                'projectVersion': version,
                'projectAuthor': manifest.author,
                'projectDescription': manifest.description,
                'projectEntry': manifest.entry
        )
        include 'plugin.yml'
    }
}

artifacts {
    archives shadowJar
}

class PluginManifest {
    String name, author, description, entry
    Version version
}

class Version {

    String major, minor, patch, fix, classifier, full

    String getFullVersion() {
        full = "$major.$minor.$patch${(fix as Integer) > 0 ? ".$fix" : ''}"
        return full
    }

    String toString() {
        getFullVersion()
    }
}