plugins {
    alias(libs.plugins.shadow)
}

PluginManifest pluginManifest = [
        name       : 'CommandPrompter',
        version    : new Version(major: 3, minor: 0, patch: 0, fix: 0, classifier: 'SNAPSHOT'),
        author     : 'CyR1en',
        description: 'Making Commands More Interactive!',
        entry      : 'com.cyr1en.commandprompter.CommandPrompter'
]


dependencies {
    implementation project(':api')
    implementation project(':common')

    implementation 'com.cyr1en:kiso-utils:1.8-SNAPSHOT'
    implementation 'com.cyr1en:kiso-mc:1.8-SNAPSHOT'
    implementation 'org.bstats:bstats-bukkit:3.0.2'

    implementation 'dev.jorel:commandapi-bukkit-shade:10.1.2'

    compileOnly 'io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT'

    compileOnly 'org.openjdk.nashorn:nashorn-core:15.4'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.palmergames.bukkit.towny:towny:0.100.3.0'
    compileOnly 'com.github.LeonMangler:SuperVanish:6.2.18-3'
    compileOnly 'de.hexaoxi:carbonchat-api:3.0.0-beta.26'
    compileOnly 'com.github.mbax:VanishNoPacket:3.22'
    compileOnly 'org.jetbrains:annotations:23.0.0'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'net.william278.husktowns:husktowns-common:3.0.5'
    compileOnly 'com.github.LeonMangler:PremiumVanishAPI:2.9.0-4'
}

tasks.shadowJar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
}

shadowJar {
    dependencies {
        exclude(dependency('com.mojang:brigadier'))
    }

    archiveBaseName.set("CommandPrompter")
    archiveClassifier.set('')
    archiveVersion.set(pluginManifest.version.getFullVersion())

    relocate 'org.bstats', 'com.cyr1en.bstats'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        expand(
                'projectName': pluginManifest.name,
                'projectVersion': version,
                'projectAuthor': pluginManifest.author,
                'projectDescription': pluginManifest.description,
                'projectEntry': pluginManifest.entry
        )
        include 'paper-plugin.yml'
    }
}

artifacts {
    archives shadowJar
}

class PluginManifest {
    String name, author, description, entry
    Version version
}

class Version {

    String major, minor, patch, fix, classifier, full

    String getFullVersion() {
        full = "$major.$minor.$patch${(fix as Integer) > 0 ? ".$fix" : ''}"
        return full
    }

    String toString() {
        getFullVersion()
    }
}
